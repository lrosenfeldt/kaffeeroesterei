{"version":3,"sources":["js/dropdown.js","js/contactForm.js","js/indexContactForm.js"],"names":["Dropdown","button","listboxNode","buttonText","activeDescendant","getAttribute","keysSoFar","registerEvents","element","removeAttribute","classList","remove","focusedItem","innerText","defocusItem","document","getElementById","setAttribute","add","id","onFocusChange","firstItem","querySelector","focusItem","itemList","querySelectorAll","length","focusFirstItem","currentOption","allOptions","currentOptionIndex","indexOf","nextOption","keyClear","clearTimeout","setTimeout","bind","list","startIndex","endIndex","label","n","toUpperCase","key","searchIndex","i","clearKeysSoFarAfterDelay","nextMatch","findMatchInRange","event","currentItem","nextItem","findPreviousOption","preventDefault","findNextOption","hideListbox","focus","itemToFocus","findItemToFocus","target","addEventListener","checkKeyPress","showListbox","checkShow","checkClickItem","ContactForm","formNode","nameInputId","mailInputId","privacyPolicyId","messageId","subjectDropdownId","isValid","nameInput","validity","valueMissing","setCustomValidity","reportValidity","mailInput","valid","typeMismatch","messageInput","privacyPolicyCheckbox","checked","labels","resetValidity","checkPrivacyPolicy","checkMessage","checkMail","checkName","subjectDropdown","subjectText","slice","formData","append","retrieveSubject","validate","addSubjectToForm","window","dropdownButton","dropdownListbox","console","warn","forms"],"mappings":"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","file":"indexContactForm.c82b2125.js","sourceRoot":"../src","sourcesContent":["/* eslint-disable no-useless-return */\nclass Dropdown {\n  constructor(button, listboxNode, buttonText) {\n    this.button = button;\n    this.listboxNode = listboxNode;\n    this.activeDescendant = this.listboxNode.getAttribute(\n      \"aria-activedescendant\"\n    );\n    this.keysSoFar = \"\";\n    this.buttonText = buttonText;\n    this.registerEvents();\n  }\n\n  // methods\n  // eslint-disable-next-line class-methods-use-this\n  defocusItem(element) {\n    if (element) {\n      element.removeAttribute(\"aria-selected\");\n      element.classList.remove(\"dropdown__list-item--focused\");\n    }\n  }\n\n  onFocusChange(focusedItem) {\n    this.button.innerText = `${this.buttonText} ${focusedItem.innerText}`;\n  }\n\n  focusItem(element) {\n    this.defocusItem(document.getElementById(this.activeDescendant));\n    element.setAttribute(\"aria-selected\", \"true\");\n    element.classList.add(\"dropdown__list-item--focused\");\n    this.listboxNode.setAttribute(\"aria-activedescendant\", element.id);\n    this.activeDescendant = element.id;\n    this.onFocusChange(element);\n  }\n\n  focusFirstItem() {\n    const firstItem = this.listboxNode.querySelector('[role=\"option\"]');\n\n    if (firstItem) {\n      this.focusItem(firstItem);\n    }\n  }\n\n  focusLastItem() {\n    const itemList = this.listboxNode.querySelectorAll('[role=\"option\"]');\n\n    if (itemList) {\n      this.focusItem(itemList[itemList.length - 1]);\n    }\n  }\n\n  setupFocus() {\n    if (!this.activeDescendant) {\n      this.focusFirstItem();\n    }\n  }\n\n  findPreviousOption(currentOption) {\n    const allOptions = [\n      ...this.listboxNode.querySelectorAll('[role=\"option\"]'),\n    ];\n    const currentOptionIndex = allOptions.indexOf(currentOption);\n    let nextOption = null;\n\n    if (currentOptionIndex > 0) {\n      nextOption = allOptions[currentOptionIndex - 1];\n    }\n\n    return nextOption;\n  }\n\n  findNextOption(currentOption) {\n    const allOptions = [\n      ...this.listboxNode.querySelectorAll('[role=\"option\"]'),\n    ];\n    const currentOptionIndex = allOptions.indexOf(currentOption);\n    let nextOption = null;\n    if (currentOptionIndex > -1 && currentOptionIndex < allOptions.length - 1) {\n      nextOption = allOptions[currentOptionIndex + 1];\n    }\n\n    return nextOption;\n  }\n\n  clearKeysSoFarAfterDelay() {\n    if (this.keyClear) {\n      clearTimeout(this.keyClear);\n      this.keyClear = null;\n    }\n    this.keyClear = setTimeout(\n      function () {\n        this.keysSoFar = \"\";\n        this.keyClear = null;\n      }.bind(this),\n      500\n    );\n  }\n\n  findMatchInRange(list, startIndex, endIndex) {\n    let label = \"\";\n    for (let n = startIndex; n < endIndex; n++) {\n      label = list[n].innerText;\n      if (\n        label &&\n        label.toUpperCase().indexOf(this.keysSoFar.toUpperCase()) === 0\n      ) {\n        return list[n];\n      }\n    }\n    return null;\n  }\n\n  findItemToFocus(key) {\n    const itemList = this.listboxNode.querySelectorAll('[role=\"option\"]');\n    if (key.length !== 1) {\n      return;\n    }\n    let searchIndex = 0;\n    if (!this.keysSoFar) {\n      for (let i = 0; i < itemList.length; i++) {\n        if (itemList[i].getAttribute(\"id\") === this.activeDescendant) {\n          searchIndex = i;\n        }\n      }\n    }\n    this.keysSoFar += key;\n    this.clearKeysSoFarAfterDelay();\n\n    let nextMatch = this.findMatchInRange(\n      itemList,\n      searchIndex + 1,\n      itemList.length\n    );\n    if (!nextMatch) {\n      nextMatch = this.findMatchInRange(itemList, 0, searchIndex);\n    }\n    return nextMatch;\n  }\n\n  checkKeyPress(event) {\n    const { key } = event;\n    const allOptions = this.listboxNode.querySelectorAll('[role=\"option\"]');\n    const currentItem =\n      document.getElementById(this.activeDescendant) || allOptions[0];\n    let nextItem = currentItem;\n\n    if (!currentItem) {\n      return;\n    }\n\n    switch (key) {\n      case \"ArrowUp\":\n        if (!this.activeDescendant) {\n          this.focusItem(currentItem);\n          break;\n        }\n\n        nextItem = this.findPreviousOption(currentItem);\n\n        if (nextItem) {\n          this.focusItem(nextItem);\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowDown\":\n        if (!this.activeDescendant) {\n          this.focusItem(currentItem);\n          break;\n        }\n\n        nextItem = this.findNextOption(currentItem);\n\n        if (nextItem) {\n          this.focusItem(nextItem);\n          event.preventDefault();\n        }\n        break;\n\n      case \" \":\n      case \"Enter\":\n      case \"Escape\":\n        event.preventDefault();\n        this.hideListbox();\n        this.button.focus();\n        break;\n      default:\n        const itemToFocus = this.findItemToFocus(key);\n        if (itemToFocus) {\n          this.focusItem(itemToFocus);\n        }\n    }\n  }\n\n  checkClickItem(event) {\n    if (event.target.getAttribute(\"role\") !== \"option\") {\n      return;\n    }\n    this.focusItem(event.target);\n  }\n\n  registerListboxEvents() {\n    this.listboxNode.addEventListener(\"keydown\", this.checkKeyPress.bind(this));\n  }\n\n  showListbox() {\n    this.listboxNode.classList.remove(\"dropdown__list--hidden\");\n    this.button.setAttribute(\"aria-expanded\", \"true\");\n    this.button.classList.add(\"dropdown__button--clicked\");\n    this.listboxNode.focus();\n  }\n\n  hideListbox() {\n    this.listboxNode.classList.add(\"dropdown__list--hidden\");\n    this.button.classList.remove(\"dropdown__button--clicked\");\n    this.button.setAttribute(\"aria-expanded\", \"true\");\n    this.button.focus();\n  }\n\n  checkShow(event) {\n    const { key } = event;\n\n    // eslint-disable-next-line default-case\n    switch (key) {\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.showListbox();\n        this.checkKeyPress(event);\n        break;\n    }\n  }\n\n  registerEvents() {\n    this.button.addEventListener(\"click\", this.showListbox.bind(this));\n    this.button.addEventListener(\"keyup\", this.checkShow.bind(this));\n    this.listboxNode.addEventListener(\"blur\", this.hideListbox.bind(this));\n    this.listboxNode.addEventListener(\"keydown\", this.checkKeyPress.bind(this));\n    this.listboxNode.addEventListener(\"click\", this.checkClickItem.bind(this));\n  }\n}\n\nexport default Dropdown;\n","/* eslint-disable no-useless-return */\n\nclass ContactForm {\n  constructor(formNode) {\n    this.formNode = formNode;\n    this.nameInputId = \"name\";\n    this.mailInputId = \"mail\";\n    this.privacyPolicyId = \"privacy-policy\";\n    this.messageId = \"text\";\n    this.subjectDropdownId = \"subject-dropdown\";\n    this.isValid = true;\n    this.registerEvents();\n  }\n\n  checkName() {\n    const nameInput = this.formNode[this.nameInputId];\n    if (nameInput.validity.valueMissing) {\n      nameInput.setCustomValidity(\"Bitte gib deinen Namen an.\");\n      nameInput.classList.add(\"contact-form__input--error\");\n      nameInput.reportValidity();\n      this.isValid = false;\n      return;\n    }\n    nameInput.setCustomValidity(\"\");\n  }\n\n  checkMail() {\n    const mailInput = this.formNode[this.mailInputId];\n    if (!mailInput.validity.valid) {\n      if (mailInput.validity.valueMissing) {\n        mailInput.setCustomValidity(\"Bitte gib deine Mail-Adresse an.\");\n      } else if (mailInput.validity.typeMismatch) {\n        mailInput.setCustomValidity(\"Das ist keine gültige Mail-Adresse.\");\n      }\n      mailInput.classList.add(\"contact-form__input--error\");\n      mailInput.reportValidity();\n      this.isValid = false;\n      return;\n    }\n    mailInput.setCustomValidity(\"\");\n  }\n\n  checkMessage() {\n    const messageInput = this.formNode[this.messageId];\n    if (messageInput.validity.valueMissing) {\n      messageInput.setCustomValidity(\n        \"Bitte sag uns, was du auf dem Herzen hast.\"\n      );\n      messageInput.classList.add(\"contact-form__input--error\");\n      messageInput.reportValidity();\n      this.isValid = false;\n      return;\n    }\n    messageInput.setCustomValidity(\"\");\n  }\n\n  checkPrivacyPolicy() {\n    const privacyPolicyCheckbox = this.formNode[this.privacyPolicyId];\n    if (!privacyPolicyCheckbox.checked) {\n      privacyPolicyCheckbox.setCustomValidity(\n        \"Bitte akzeptiere die Datenschutzerklärung\"\n      );\n      const privacyPolicyLabel = privacyPolicyCheckbox.labels[0];\n      privacyPolicyLabel.classList.add(\"checkbox-wrapper__label--error\");\n      privacyPolicyCheckbox.reportValidity();\n      this.isValid = false;\n      return;\n    }\n    privacyPolicyCheckbox.setCustomValidity(\"\");\n  }\n\n  resetValidity() {\n    const mailInput = this.formNode[this.mailInputId];\n    mailInput.setCustomValidity(\"\");\n    this.isValid = true;\n  }\n\n  validate(event) {\n    this.resetValidity();\n    this.checkPrivacyPolicy();\n    this.checkMessage();\n    this.checkMail();\n    this.checkName();\n    if (this.isValid) {\n      return;\n    }\n    event.preventDefault();\n  }\n\n  retrieveSubject() {\n    const subjectDropdown = document.getElementById(this.subjectDropdownId);\n    // cut off \"Dein Betreff:\"\n    const subjectText = subjectDropdown.innerText.slice(13);\n    if (subjectText.length === 0) {\n      return \"kein Betreff\";\n    }\n    return subjectText;\n  }\n\n  addSubjectToForm(event) {\n    const { formData } = event;\n    formData.append(\"subject\", this.retrieveSubject());\n  }\n\n  registerEvents() {\n    this.formNode.addEventListener(\"submit\", this.validate.bind(this));\n    this.formNode.addEventListener(\n      \"formdata\",\n      this.addSubjectToForm.bind(this)\n    );\n  }\n}\n\nexport default ContactForm;\n","import Dropdown from \"./dropdown\";\nimport ContactForm from \"./contactForm\";\n\nwindow.addEventListener(\"load\", () => {\n  const dropdownButton = document.querySelector(\".dropdown__button\");\n  const dropdownListbox = document.querySelector(\".dropdown__list\");\n  if (dropdownButton && dropdownListbox) {\n    new Dropdown(dropdownButton, dropdownListbox, \"Dein Betreff:\");\n  } else {\n    console.warn(\"no dropdown found\");\n  }\n\n  const formNode = document.forms[\"contact-form\"];\n  if (formNode) {\n    new ContactForm(formNode);\n  }\n});\n"]}